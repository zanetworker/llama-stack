version: '2'
image_name: distribution-myenv-ollama
# container_image: distribution-myenv-ollama
apis:
- inference
- vector_io
- safety
- agents
- telemetry
- eval
- datasetio
- scoring
- tool_runtime
providers:
  inference:
  - provider_id: ollama
    provider_type: remote::ollama
    config:
      # url: ${env.OLLAMA_URL:http://host.docker.internal:11434}
       url: ${env.OLLAMA_URL:http://0.0.0.0:11434}
  vector_io:
  - provider_id: faiss
    provider_type: inline::faiss
    config:
      kvstore:
        type: sqlite
        namespace: null
        db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/distribution-myenv-ollama}/faiss_store.db
  # - provider_id: chromadb
  #   provider_type: remote::chromadb
  #   config:
  #     url: ${env.CHROMA_URL:http://host.docker.internal:8000}
  safety:
  - provider_id: llama-guard
    provider_type: inline::llama-guard
    config: {}
  agents:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      persistence_store:
        type: sqlite
        namespace: null
        db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/distribution-myenv-ollama}/agents_store.db
  telemetry:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      service_name: ${env.OTEL_SERVICE_NAME:llama-stack}
      sinks: ${env.TELEMETRY_SINKS:console,sqlite}
      sqlite_db_path: ${env.SQLITE_DB_PATH:~/.llama/distributions/distribution-myenv-ollama/trace_store.db}
  # - provider_id: meta-reference
  #   provider_type: inline::meta-reference
  #   config:
  #     service_name: llama-stack
  #     sinks: console,otel
  #     otel_endpoint: "http://0.0.0.0:6006/v1/traces"

  eval:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config: {}
  datasetio:
  - provider_id: huggingface-0
    provider_type: remote::huggingface
    config: {}
  - provider_id: localfs-1
    provider_type: inline::localfs
    config: {}
  scoring:
  - provider_id: basic-0
    provider_type: inline::basic
    config: {}
  - provider_id: llm-as-judge-1
    provider_type: inline::llm-as-judge
    config: {}
  - provider_id: braintrust-2
    provider_type: inline::braintrust
    config:
      openai_api_key: ${env.OPENAI_API_KEY:}
  tool_runtime:
  - provider_id: brave-search-0
    provider_type: remote::brave-search
    config:
      api_key: ${env.BRAVE_SEARCH_API_KEY:}
      max_results: 3
  - provider_id: tavily-search-1
    provider_type: remote::tavily-search
    config:
      api_key: ${env.TAVILY_SEARCH_API_KEY:}
      max_results: 3
  - provider_id: code-interpreter-2
    provider_type: inline::code-interpreter
    config: {}
  - provider_id: rag-runtime
    provider_type: inline::rag-runtime
    config: {}
  - provider_id: model-context-protocol
    provider_type: remote::model-context-protocol
    config: {}
metadata_store: null
models:
  - metadata:
      embedding_dimension: 384
    model_id: all-MiniLM-L6-v2
    provider_id: ollama
    provider_model_id: all-minilm:latest
    model_type: embedding
shields: []
vector_dbs: []
datasets: []
scoring_fns: []
benchmarks: []
tool_groups:
- toolgroup_id: builtin::rag
  provider_id: rag-runtime
- toolgroup_id: builtin::websearch
  provider_id: tavily-search-1
- toolgroup_id: builtin::code_interpreter
  provider_id: code-interpreter-2
